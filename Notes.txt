
C# supports 6 types of access specifiers. They are as follows

Private
Public
Protected
Internal
Protected Internal
Private Protected (C# Version 7.2 onwards)
//https://dotnettutorials.net/lesson/access-specifiers-csharp/
//------------------------------
Advantages of Encapsulation in C#:
Protection of data: You can validate the data before storing it in the variable.
Achieving Data Hiding: The user will have no idea about the inner implementation of the class.
Security: The encapsulation Principle helps to secure our code since it ensures that other units(classes, interfaces, etc) can not access the data directly.
Flexibility: The encapsulation Principle in C# makes our code more flexible, which in turn allows the programmer to change or update the code easily.
Control: The encapsulation Principle gives more control over the data stored in the variables. 
For example, we can control the data by validating whether the data is good enough to store in the variable.

//------------------------------------------

The polymorphism in C# can be implemented using the following three ways.

Method Overloading
Operator Overloading
Method Overriding
Method Hiding

//--------------------------------